---
- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    instance_name: ansible-instance-name
    keypair: sumerion-telenetgroup
    instance_type: t2.micro
    security_group: ["ssh-only", "public-web"]
    image: ami-1e339e71 
    region: eu-central-1
  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         instance_tags:
           Name: "{{ instance_name }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: subnet-f1d0c98a
         assign_public_ip: yes
      register: ec2

    - local_action: copy content="{{ ec2.instances[0].public_dns_name  }}" dest=./public_dns_name

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}" 

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: True
  gather_facts: False
  tasks:
    - name: Add python 
      raw: "apt-get -y install python-simplejson"

- name: Apply nodejs role
  hosts: launched
  become: True
  roles:
    - { name: nsops.nodejs, version: "6.x" }

- name: Deploy app
  hosts: launched
  become: True
  vars:
    - homeDir: /home/ubuntu
    - appDir: app
    - repo: ansible-functional-test-example
    - account: sumerion
    - privateKey: /var/lib/jenkins/keys/github_key

  tasks:
    - name: Install Packages
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - build-essential
        - git
        - mcrypt
        - nginx
        - curl
    - name: Allow all firewall    
      ufw:
        state: enabled
        policy: allow
    - name: Install pm2
      npm: name=pm2 global=yes production=yes
    - name: Create APP Directory
      file: path={{homeDir}}/{{appDir}} state=directory
    - name: Copy Private Key
      copy: src={{privateKey}} dest={{homeDir}} mode=0600
    - name: Git Clone Repo
      git: repo=git@github.com:{{account}}/{{repo}}.git dest={{homeDir}}/{{appDir}} update=yes force=yes accept_hostkey=yes  key_file={{homeDir}}/github_key
      register: git_finished
    - name: Running NPM install
      npm: path={{homeDir}}/{{appDir}}/app
      register: npm_finished
      when: git_finished.changed
    - name: Stop APP
      sudo_user: ubuntu
      command: pm2 stop app chdir={{homeDir}}/{{appDir}}/app
      ignore_errors: yes
    - name: Start APP
      sudo_user: ubuntu
      command: pm2 start ./bin/www --name app chdir={{homeDir}}/{{appDir}}/app
      ignore_errors: yes
      when: npm_finished.changed
